rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /automation_configs/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /automation_results/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /user_sync/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    // Extension commands collection - allow both authenticated and unauthenticated access for testing
    match /extensionCommands/{docId} {
      allow read, write: if true; // Allow all access for testing - can be restricted later
    }
    
    match /plan_subscribers/{docId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    // CampaignData collection - users can only access their own campaign data
    match /CampaignData/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    match /documents/{docId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
  }
}